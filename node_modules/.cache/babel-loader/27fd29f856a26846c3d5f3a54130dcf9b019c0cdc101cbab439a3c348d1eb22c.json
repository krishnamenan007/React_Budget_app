{"ast":null,"code":"import React,{createContext,useReducer}from'react';// 5. The reducer - this is used to update the state, based on the action\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const AppReducer=(state,action)=>{let budget=0;switch(action.type){case'ADD_EXPENSE':let total_budget=0;total_budget=state.expenses.reduce((previousExp,currentExp)=>{return previousExp+currentExp.cost;},0);total_budget=total_budget+action.payload.cost;action.type=\"DONE\";if(total_budget<=state.budget){total_budget=0;state.expenses.map(currentExp=>{if(currentExp.name===action.payload.name){currentExp.cost=action.payload.cost+currentExp.cost;}return currentExp;});return{...state};}else{alert(\"Cannot increase the allocation! Out of funds\");return{...state};}case'RED_EXPENSE':const red_expenses=state.expenses.map(currentExp=>{if(currentExp.name===action.payload.name&&currentExp.cost-action.payload.cost>=0){currentExp.cost=currentExp.cost-action.payload.cost;budget=state.budget+action.payload.cost;}return currentExp;});action.type=\"DONE\";return{...state,expenses:[...red_expenses]};case'DELETE_EXPENSE':action.type=\"DONE\";state.expenses.map(currentExp=>{if(currentExp.name===action.payload){budget=state.budget+currentExp.cost;currentExp.cost=0;}return currentExp;});action.type=\"DONE\";return{...state,budget};case'SET_BUDGET':action.type=\"DONE\";state.budget=action.payload;return{...state};case'CHG_CURRENCY':action.type=\"DONE\";state.currency=action.payload;return{...state};default:return state;}};// 1. Sets the initial state when the app loads\nconst initialState={budget:2000,expenses:[{id:\"Marketing\",name:'Marketing',cost:50},{id:\"Finance\",name:'Finance',cost:300},{id:\"Sales\",name:'Sales',cost:70},{id:\"Human Resource\",name:'Human Resource',cost:40},{id:\"IT\",name:'IT',cost:500}],currency:'£'};// 2. Creates the context this is the thing our components import and use to get the state\nexport const AppContext=/*#__PURE__*/createContext();// 3. Provider component - wraps the components we want to give access to the state\n// Accepts the children, which are the nested(wrapped) components\nexport const AppProvider=props=>{// 4. Sets up the app state. takes a reducer, and an initial state\nconst[state,dispatch]=useReducer(AppReducer,initialState);let remaining=0;if(state.expenses){const totalExpenses=state.expenses.reduce((total,item)=>{return total=total+item.cost;},0);remaining=state.budget-totalExpenses;}return/*#__PURE__*/_jsx(AppContext.Provider,{value:{expenses:state.expenses,budget:state.budget,remaining:remaining,dispatch,currency:state.currency},children:props.children});};","map":{"version":3,"names":["React","createContext","useReducer","jsx","_jsx","AppReducer","state","action","budget","type","total_budget","expenses","reduce","previousExp","currentExp","cost","payload","map","name","alert","red_expenses","currency","initialState","id","AppContext","AppProvider","props","dispatch","remaining","totalExpenses","total","item","Provider","value","children"],"sources":["C:/Users/Krishnamenan/Desktop/Projects/React/React_Budget_app/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useReducer } from 'react';\r\n\r\n// 5. The reducer - this is used to update the state, based on the action\r\nexport const AppReducer = (state, action) => {\r\n    let budget = 0;\r\n    switch (action.type) {\r\n        case 'ADD_EXPENSE':\r\n            let total_budget = 0;\r\n            total_budget = state.expenses.reduce(\r\n                (previousExp, currentExp) => {\r\n                    return previousExp + currentExp.cost\r\n                },0\r\n            );\r\n            total_budget = total_budget + action.payload.cost;\r\n            action.type = \"DONE\";\r\n            if(total_budget <= state.budget) {\r\n                total_budget = 0;\r\n                state.expenses.map((currentExp)=> {\r\n                    if(currentExp.name === action.payload.name) {\r\n                        currentExp.cost = action.payload.cost + currentExp.cost;\r\n                    }\r\n                    return currentExp\r\n                });\r\n                return {\r\n                    ...state,\r\n                };\r\n            } else {\r\n                alert(\"Cannot increase the allocation! Out of funds\");\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n            case 'RED_EXPENSE':\r\n                const red_expenses = state.expenses.map((currentExp)=> {\r\n                    if (currentExp.name === action.payload.name && currentExp.cost - action.payload.cost >= 0) {\r\n                        currentExp.cost =  currentExp.cost - action.payload.cost;\r\n                        budget = state.budget + action.payload.cost\r\n                    }\r\n                    return currentExp\r\n                })\r\n                action.type = \"DONE\";\r\n                return {\r\n                    ...state,\r\n                    expenses: [...red_expenses],\r\n                };\r\n            case 'DELETE_EXPENSE':\r\n            action.type = \"DONE\";\r\n            state.expenses.map((currentExp)=> {\r\n                if (currentExp.name === action.payload) {\r\n                    budget = state.budget + currentExp.cost\r\n                    currentExp.cost =  0;\r\n                }\r\n                return currentExp\r\n            })\r\n            action.type = \"DONE\";\r\n            return {\r\n                ...state,\r\n                budget\r\n            };\r\n        case 'SET_BUDGET':\r\n            action.type = \"DONE\";\r\n            state.budget = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n            };\r\n        case 'CHG_CURRENCY':\r\n            action.type = \"DONE\";\r\n            state.currency = action.payload;\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// 1. Sets the initial state when the app loads\r\nconst initialState = {\r\n    budget: 2000,\r\n    expenses: [\r\n        { id: \"Marketing\", name: 'Marketing', cost: 50 },\r\n        { id: \"Finance\", name: 'Finance', cost: 300 },\r\n        { id: \"Sales\", name: 'Sales', cost: 70 },\r\n        { id: \"Human Resource\", name: 'Human Resource', cost: 40 },\r\n        { id: \"IT\", name: 'IT', cost: 500 },\r\n    ],\r\n    currency: '£'\r\n};\r\n\r\n// 2. Creates the context this is the thing our components import and use to get the state\r\nexport const AppContext = createContext();\r\n\r\n// 3. Provider component - wraps the components we want to give access to the state\r\n// Accepts the children, which are the nested(wrapped) components\r\nexport const AppProvider = (props) => {\r\n    // 4. Sets up the app state. takes a reducer, and an initial state\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    let remaining = 0;\r\n\r\n    if (state.expenses) {\r\n            const totalExpenses = state.expenses.reduce((total, item) => {\r\n            return (total = total + item.cost);\r\n        }, 0);\r\n        remaining = state.budget - totalExpenses;\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider\r\n            value={{\r\n                expenses: state.expenses,\r\n                budget: state.budget,\r\n                remaining: remaining,\r\n                dispatch,\r\n                currency: state.currency\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}